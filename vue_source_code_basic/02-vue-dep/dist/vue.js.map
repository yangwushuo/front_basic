{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/dep.js","../src/observe/index.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/observe/watcher.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["// 希望重写数组中的部分方法 思路:保留原来的push等方法，重写array原型\r\nlet oldArrayProto = Array.prototype // 获取数组的原型\r\n// newArrayProto.__proto__ = oldArrayProto\r\nlet newArrayProto = Object.create(oldArrayProto); // 复制一份\r\n\r\nlet methods = [ // 找到所有的方法\r\n  'push',\r\n  'pop',\r\n  'shift',\r\n  'unshift',\r\n  'reverse',\r\n  'sort',\r\n  'splice'\r\n] // concat slice 都不会改变原数组\r\n\r\nmethods.forEach(method => {\r\n  // arr.push(1,2,3)\r\n  newArrayProto[method] = function (...args) {\r\n\r\n    const result = oldArrayProto[method].call(this, ...args) // 内部调用原来的方法，函数的劫持 切片编程\r\n    let inserted\r\n    let ob = this.__ob__\r\n    switch(method){\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args\r\n        break\r\n      case 'splice':\r\n        inserted = args.slice(2) // args第三个参数是新增数据，slice获取新增数据 给到inserted\r\n        break\r\n      default:\r\n        break\r\n    }\r\n\r\n    if(inserted){\r\n      // 对新增的内容再次进行观测 如果是\r\n      ob.observeArray(inserted)\r\n    }\r\n\r\n    return result\r\n  }\r\n})\r\n\r\nexport default newArrayProto","let id = 0\r\nclass Dep{\r\n  constructor(){\r\n    this.id = id++ // 属性的dep要收集watcher\r\n    this.subs = [] // 这里存放着当前属性对应的watcher\r\n  }\r\n  depend(){\r\n    // 这里我们不希望放重复的watcher， 而且刚才只是一个单向的关系 dep -> watcher\r\n    // watcher 记录dep\r\n    // this.subs.push(Dep.target)\r\n\r\n    Dep.target.addDep(this) // 让watcher记住dep\r\n\r\n    // dep和watcher是一个多对多的关系(一个属性可以在多个组件中使用 dep -> 多个watcher)\r\n    // 一个组件中由多个属性组成(一个watcher 对应多个dep)\r\n  }\r\n  addSub(watcher){\r\n    this.subs.push(watcher)\r\n  }\r\n  notify(){\r\n    console.log(this.subs);\r\n    this.subs.forEach(watcher => watcher.update()) // 告诉watcher要更新了\r\n  }\r\n}\r\n\r\nDep.target = null\r\n\r\nexport default Dep","import newArrayProto from \"./array\"\r\nimport Dep from \"./dep\"\r\n\r\nclass ObServe{\r\n  constructor(data){\r\n    // Object.defineProperty 只能劫持已经存在的属性 (vue里面会为此单独写一些api $set $delect)\r\n    Object.defineProperty(data,'__ob__',{\r\n      value: this,\r\n      enumerable: false // 将__ob__变成不可枚举 （循环的时候无法获取到 不然对data进行循环的时候获取到this时候会进入死循环 this包含)\r\n    })\r\n    if(Array.isArray(data)){\r\n      // 这里我们可以重写数组中的方法 7个编译反法 是可以修改数组本身的\r\n      data.__proto__ = newArrayProto // 需要保修数组原又的特性，并且可以重写部分方法\r\n      this.observeArray(data) // 如果数组中放的是对象 可以监控到对象的变化\r\n    }else{\r\n      this.walk(data)\r\n    }\r\n\r\n  }\r\n  walk(data){ // 循环对象 对属性依次进行劫持\r\n    // \"重新定义\"属性 性能差\r\n    Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n  }\r\n  observeArray(data){ //观测数组\r\n    data.forEach(item => observe(item))\r\n  }\r\n}\r\n\r\nexport function defineReactive(target, key , value){ //闭包 属性劫持\r\n  // 如果属性是对象 则需要再次进行一次递归劫持\r\n  observe(value)\r\n  let dep = new Dep() // 每一个属性都一个dep\r\n  Object.defineProperty(target, key, {\r\n    get(){ //取值的时候会执行get  \r\n      console.log(\"获取+1\")\r\n      if(Dep.target){\r\n        dep.depend() // 让这个属性的收集器记住当前的watcher\r\n      }\r\n      return value\r\n    },\r\n    set(nv){ //设置值的时候会执行set\r\n      if(nv === value) return \r\n      observe(nv)\r\n      value = nv\r\n      console.log(\"更新+1\");\r\n      dep.notify() // 通知更新\r\n    }\r\n  }) \r\n}\r\n\r\nexport function observe(data){\r\n  // 对这个对象进行劫持\r\n  if(typeof data !== 'object' || data == null) return\r\n\r\n  // 如果一个对象被劫持过了，那就不需要再被劫持了(要判断一个对象是否被劫持过，可以增添一个实例，用实例来判断是否被劫持过)\r\n  return new ObServe(data)\r\n\r\n}","import {\r\n  observe\r\n} from \"./observe/index\"\r\n\r\nfunction initState(vm) {\r\n  const opts = vm.$options\r\n  if (opts.data) {\r\n    initData(vm)\r\n  }\r\n}\r\n\r\nfunction proxy(vm, target, key){\r\n  Object.defineProperty(vm, key, {\r\n    get(){\r\n      return vm[target][key]\r\n    },\r\n    set(nv){\r\n      vm[target][key] = nv\r\n    }\r\n  })\r\n}\r\n\r\nfunction initData(vm) {\r\n  let data = vm.$options.data // data可能是函数和对象\r\n  data = typeof data === 'function' ? data.call(vm) : data // data是用户返回的对象\r\n\r\n  vm._data = data // 我将返回的对象找到了_data上\r\n  // 对数据进行劫持 vue2 里面采用了一个api defineProperty\r\n  observe(data)\r\n\r\n  // 将vm._data 用vm来代理就可以了\r\n  for(let key in data){\r\n    proxy(vm, '_data', key)\r\n  }\r\n\r\n}\r\n\r\nexport default initState","\r\n/*\r\n  整体模板解析的思路: \r\n    1. 获取标签字符串\r\n    2. 标签字符串形式如: \r\n        <div>\r\n          <div>我是一个大帅哥</div>\r\n          <span>{{user.name}}</span>\r\n        </div>\r\n    3. indexOf 获取 < 标识的位置，如果标识的位置为0 则说明遇到的是起始标签或者终止标签\r\n    4. 使用起始标签的正则表达式进行获取 如果获取到数据说明是 起始标签(将当前起始标签进行节点打包start，再从模板字符串中删除)\r\n      如果没有获取到数据说明是 终止标签(对终止标签进行处理end，再次从模板字符串中删除匹配到的终止标签)\r\n    5. 如果索引下表不是0，说明不是起始标签也不是终止标签 那就是标签中的内容 对标签内容进行一次打包chars\r\n      函数说明: \r\n        createASTElement 创建一个ast树的节点\r\n        start 起始标签的处理\r\n        end 终止标签的处理\r\n        chars 标签内容的处理\r\n\r\n      ast树使用说明：使用堆来存放ast树的内容  如图 模板解析ast树图例\r\n*/\r\n\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 他匹配到的分组是一个 标签名  <xxx 匹配到的是开始 标签的名字\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);  // 匹配的是</xxxx>  最终匹配到的分组就是结束标签的名字\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;  // 匹配属性\r\n// 第一个分组就是属性的key value 就是 分组3/分组4/分组五\r\nconst startTagClose = /^\\s*(\\/?)>/;  // <div> <br/>\r\n\r\n// vue3 采用的不是使用正则表达式去匹配\r\n\r\n// 对模板进行编译处理\r\nexport function parseHTML(html){ // html 最开始肯定是一个 <div></div>\r\n\r\n  const ELEMENT_TYPE = 1\r\n  const TEXT_TYPE = 3\r\n  const stack = [] // 用于存放元素的\r\n  let currentParent // 指向的是栈中的最后一个\r\n  let root\r\n\r\n  // 创建ast树的一个节点\r\n  function createASTElement(tag, attrs){\r\n    return {\r\n      tag,\r\n      attrs,\r\n      type: ELEMENT_TYPE,\r\n      children: [], // 孩子\r\n      parent: null\r\n    }\r\n  }\r\n\r\n  // 构建开始标签\r\n  function start(tag, attrs){\r\n    let node = createASTElement(tag, attrs) // 获取一个节点\r\n    if(!root){ // 如果没有根节点则赋值\r\n      root = node\r\n    }\r\n    if(currentParent){ // 如果当前节点已经存在\r\n      // 1.将新节点的父亲设置为当前节点\r\n      node.parent = currentParent\r\n      // 2.将父节点也就是当前节点孩子设置为该新节点\r\n      currentParent.children.push(node)\r\n      \r\n    }\r\n    // 将新节点放入栈中\r\n    stack.push(node)\r\n    // 将当前节点指针修改为最新的节点\r\n    currentParent = node\r\n  }\r\n\r\n  // 构建标签内容\r\n  function chars(text){\r\n    text = text.replace(/\\s+/g,''); //清除空格\r\n    // 将当前内容节点添加到当前节点指针的孩子队列中\r\n    text && currentParent.children.push({\r\n      text,\r\n      type: TEXT_TYPE,\r\n      parent: currentParent // 内容父节点为最新节点\r\n    })\r\n  }\r\n\r\n  // 构建结尾标签\r\n  function end(tag){\r\n    // 如果是最后一个标签则肯定与栈中最新节点匹对\r\n    let node = stack.pop() // 弹出最新节点\r\n    // 将最新节点设置为上一个父节点\r\n    currentParent = stack[stack.length -1]\r\n  }\r\n  \r\n  // 截取模板的字符串\r\n  function advance(n){\r\n    html = html.substring(n)\r\n  }\r\n\r\n  // 解析标签开头\r\n  function parseStartTag(){\r\n    const start = html.match(startTagOpen) // 解析起始标签获取标签名与标签属性\r\n    if(start){\r\n      const match = {\r\n        tagName: start[1], // 标签名\r\n        attrs: []\r\n      }\r\n      advance(start[0].length) // 截取html字符串\r\n      // 如果不是开始的标签的结束 就一直匹配下去\r\n      let attr, end // attr 标签中的属性 end 标签的结尾 >\r\n      // 如果匹配到标签结尾则结束循环 功能: 获取标签中的属性\r\n      while(!(end = html.match(startTagClose)) && (attr = html.match(attribute))){\r\n        advance(attr[0].length)\r\n        match.attrs.push({ \r\n          name: attr[1], \r\n          value: attr[3] || attr[4] || attr[5] || true\r\n        })\r\n      }\r\n      // end 标签的结尾 > \r\n      if(end){\r\n        // 截取最后的结尾标识 >\r\n        advance(end[0].length)\r\n      }\r\n\r\n      // 返回结果\r\n      return match\r\n    }\r\n\r\n    // 没有匹配到\r\n    return false\r\n  }\r\n\r\n  // 循环html字符串\r\n  while (html) {\r\n    // 如果textEnd 为0 说明是一个开始标签或者结束标签\r\n    // 如果textEnd > 0 说明就是文本的结束位置\r\n    let textEnd = html.indexOf('<') // 如果indexOf中的索引是0 则说明是个标签(开始与结束的标签)\r\n    if(textEnd == 0){\r\n\r\n      const startTagMatch = parseStartTag() // 开始标签的匹配结果\r\n      if(startTagMatch){ // 解析到的开始标签\r\n        start(startTagMatch.tagName, startTagMatch.attrs)\r\n        continue\r\n      }\r\n\r\n      let endTagMatch = html.match(endTag) // 结束标签的匹配结果\r\n      if(endTagMatch){\r\n        advance(endTagMatch[0].length)\r\n        end(endTagMatch[1])\r\n        continue\r\n      }\r\n\r\n    }\r\n    // 如果 < 下标不为0说明有内容\r\n    if(textEnd > 0){\r\n      let text = html.substring(0, textEnd) // 直接提取文本内容\r\n      if(text){ // 如果有文本则执行次操作\r\n        chars(text)\r\n        advance(text.length) // 解析到的文本\r\n      }\r\n    }\r\n  }\r\n\r\n  return root\r\n\r\n}","import {\r\n  parseHTML\r\n} from \"./parse\";\r\n\r\n/* \r\n  ast树构建思路\r\n    _c 标签 _v 内容 _s 模板语法\r\n  判断是否有孩子树，如果有子递归调用构建 直到没有孩子树则返回\r\n*/\r\n\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{ asdsadsa }}  匹配到的内容就是我们表达式的变量\r\nfunction gen(node) {\r\n  if (node.type === 1) {\r\n    // 标签节点\r\n    return codegen(node)\r\n  } else {\r\n    // 文本节点\r\n    let text = node.text\r\n    if (!defaultTagRE.test(text)) { // 判断是否为{{xxxx}} 模板标识符\r\n      return `_v(${JSON.stringify(text)})`\r\n    } else {\r\n      // _v(_s(name)+'hello'+_s(age))\r\n      let tokens = []\r\n      let match\r\n      let lastIndex = 0\r\n      defaultTagRE.lastIndex = 0 // 重置正则索引位置\r\n      while (match = defaultTagRE.exec(text)) { // 如果 match有值\r\n        let index = match.index // 匹配开始的索引下标记 {{name}} hello {{age}} hello\r\n        if (index > lastIndex) { // 如果当前下标大于上一个下表说明中间夹杂着字面量值\r\n          // 将字面量添加到token中\r\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n        }\r\n        // 将匹配到的模板标识添加到tokens中\r\n        tokens.push(`_s(${match[1].trim()})`)\r\n        lastIndex = index + match[0].length // 更新最新索引值\r\n      }\r\n      // 判断如果出现这种情况 {{name}} hello 需要单独处理\r\n      if (lastIndex < text.length) {\r\n        tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n      }\r\n\r\n      return `_v(${tokens.join('+')})` // {{name}}+hello+{{age}}+hello\r\n    }\r\n  }\r\n}\r\n\r\nfunction genProps(attrs) {\r\n\r\n  /*\r\n    attrs参数: [{name:id, value:app },{name:style, value:color:red;background-color:red }]\r\n    预期结果: {id:\"app\",style:{\"color\":\"red\"}}\r\n  */\r\n\r\n  let str = '' // {name, value}\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i]\r\n    // 判断如果是style内联样式则单独处理\r\n    if (attr.name === 'style') {\r\n      // color:red;background-color:red => {color: 'red', background-color: 'red' }\r\n      let obj = {}\r\n      attr.value.split(';').forEach(item => {\r\n        let [key, value] = item.split(':')\r\n        value && (obj[key] = value.trim())\r\n      });\r\n      attr.value = obj\r\n    }\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n  }\r\n  return `{${str.slice(0,-1)}}` // 去掉结尾逗号\r\n}\r\n\r\nfunction genChildren(children) {\r\n  return children.map(child => gen(child)).join(',')\r\n}\r\n\r\nfunction codegen(ast) {\r\n  let children = genChildren(ast.children)\r\n  let tag = ast.tag\r\n  let attrs = ast.attrs.length ? genProps(ast.attrs) : 'null'\r\n  let tagChildren = ast.children.length ? `,${children}` : ''\r\n  let code = (\r\n    `_c('${tag}', \r\n    ${attrs}\r\n    ${tagChildren}\r\n    )`\r\n  )\r\n  return code\r\n}\r\n\r\nexport function complieToFunction(html) {\r\n\r\n  // 1.就是将template 转换成ast语法树\r\n  let ast = parseHTML(html)\r\n  console.log(ast)\r\n\r\n  // 2.生成render (render 方法执行后的返回的结果就是 虚拟DOM)\r\n  // 模板引擎的实现原理就是 with + new Function\r\n  let code = codegen(ast)\r\n  code = `with(this){return ${code}}` // 使用with 那么函数体内的name.age 等对象属性都会去this中寻找 \r\n  let render = new Function(code) // 根据代码生成render函数\r\n\r\n  //  _c('div',{id:'app'},_c('div',{style:{color:'red'}},  _v(_s(vm.name)+'hello'),_c('span',undefined,  _v(_s(age))))\r\n  console.log(render);\r\n  return render\r\n\r\n}  ","export function createElementVNode(vm, tag, data, ...children){\r\n  if(data == null) data = {}\r\n  let key = data.key\r\n  if(key){\r\n    delete data.key\r\n  }\r\n  return vnode(vm, tag, key, data, children)\r\n}\r\n\r\nexport function createTextVNode(vm, text){\r\n  return vnode(vm, undefined, undefined, undefined, undefined, text)\r\n}\r\n\r\nfunction vnode(vm, tag, key, data, children, text){\r\n  return {\r\n    vm, tag, key, data, children, text\r\n  }\r\n}","import Dep from './dep'\r\n\r\nlet id = 0\r\n\r\n// 1) 当我们创建渲染watcher的时候我们会把当前的渲染watcher放在Dep.target上\r\n// 2）调用_render() 会取值走到get上\r\n// 每个属性有一个dep （属性就是被观察者) watcher 就是观察者(属性变化了会通知观察者重新进行渲染) -> 观察这模式\r\nclass Watcher{\r\n  constructor(vm, fn, options){\r\n    this.id = id++\r\n    this.renderWatcher = options // 是一个渲染watcher\r\n    this.getter = fn // getter意味着调用这个函数可以发生取值操作\r\n    this.deps = [] // 后续我们实现计算属性，和一些清理工作需要用到\r\n    this.depsId = new Set()\r\n    this.get()\r\n  }\r\n  addDep(dep){ // 一个组件 对应着多个属性 重复的属性也不用记录\r\n    let id = dep.id\r\n    if(!this.depsId.has(id)){\r\n      this.deps.push(dep)\r\n      this.depsId.add(id)\r\n      dep.addSub(this) // watcher已经记住了dep了而且去重了，此时让dep也记住\r\n    }\r\n  }\r\n  get(){\r\n    Dep.target = this // 静态属性就是只有一份\r\n    this.getter() // 会去vm上取值 vm._update(vm.render) 取name 和age\r\n    Dep.target = null // 渲染完毕后就清空\r\n  }\r\n  update(){\r\n    console.log(\"重新渲染\");\r\n    this.get()\r\n  }\r\n}\r\n\r\nexport default Watcher","import { createElementVNode, createTextVNode } from \"./vdom/index\"\r\nimport Watcher from './observe/watcher'\r\n\r\n/*\r\n  思路： \r\n    对ast树进行拼接的到 _c('xx',{},_c('xx',null,_v(_s({{name}})))) 字符串\r\n    使用white + new Function 将字符串用于代码\r\n    申明_c _v 原型函数用于创建vnode节点 ，这里的vnode节点附带子孙关系 \r\n    将最外层vnode进行element元素创建 替换掉页面html中指定的element旧元素\r\n*/\r\n\r\nfunction patchProps(el, props){ // 元素添加属性\r\n  \r\n  for (let key in props) {\r\n    if(key === 'style'){\r\n      for(let styleName in props.style){\r\n        el.style[styleName] = props.style[styleName] \r\n      }\r\n    }else{\r\n      el.setAttribute(key, props[key])\r\n    }\r\n  }\r\n\r\n}\r\n\r\nfunction createElm(vnode) { \r\n  let { tag, data, children, text } = vnode\r\n  if(typeof tag === 'string'){\r\n    vnode.el = document.createElement(tag) // 这里将真实的节点和虚拟的节点对应起来， 后续如果修改属性了\r\n    patchProps(vnode.el, data) // 添加相应的属性\r\n    children.forEach(child => {\r\n      vnode.el.appendChild(createElm(child)) // 元素添加子元素 child元素也是一个vnode\r\n    })\r\n  }else{\r\n    // 文本\r\n    vnode.el = document.createTextNode(text)\r\n  }\r\n\r\n  return vnode.el\r\n}\r\n\r\n// 功能: 根据vnode创建element\r\nfunction patch(oldVNode, vnode){\r\n  // 写的式初渲染流程\r\n  console.log(oldVNode,vnode);\r\n\r\n  const isRealElement = oldVNode.nodeType // 判断老元素是否存在\r\n  if(isRealElement){ // 存在则创建新元素替换老元素\r\n    const elm = oldVNode // 获取真实元素\r\n    const parentElm = elm.parentNode // 拿到父元素\r\n    let newElm = createElm(vnode) // 创建最终元素\r\n    // Node.nextSibling 是一个只读属性，返回其父节点的 childNodes 列表中紧跟在其后面的节点，如果指定的节点为最后一个节点，则返回 null。\r\n    // insertBefore() 方法可在已有的子节点前插入一个新的子节点。\r\n    parentElm.insertBefore(newElm, elm.nextSibling) // 将最新元素插入老元素下面一个元素之前\r\n    parentElm.removeChild(elm) // 删除老元素\r\n\r\n    return newElm\r\n  }else{\r\n\r\n  }\r\n}\r\n\r\nexport function initLiftCycle(Vue){\r\n  Vue.prototype._update = function(vnode){ // 将vnode转化成真实dom\r\n    const vm = this\r\n    const el = vm.$el\r\n\r\n    // patch即有初始化的功能 又有更新的功能\r\n    console.log(\"vnode结果:\",vnode);\r\n    vm.$el = patch(el, vnode)\r\n  }\r\n  Vue.prototype._c = function(){\r\n    return createElementVNode(this, ...arguments)\r\n  }\r\n  Vue.prototype._v = function(){  \r\n    return createTextVNode(this, ...arguments)\r\n  }\r\n  Vue.prototype._s = function(value){\r\n    if(typeof value !== 'object') return value\r\n    return JSON.stringify(value)\r\n  }\r\n  Vue.prototype._render = function(){\r\n    // 当渲染的时候会去实例中取值， 我们就可以将属性和视图绑定在一起\r\n    return this.$options.render.call(this) // 通过ast语法转移后生成的render方法\r\n  }\r\n}\r\n\r\nexport function mountComponent(vm, el){ // 这里的el 是通过querySelector处理过的\r\n  vm.$el = el\r\n\r\n  // 1.调用render方法产生虚拟节点 虚拟DOM\r\n  const updateComponent = () => {\r\n    vm._update(vm._render()) // vm.$options.render() 虚拟节点\r\n  }\r\n  const watcher = new Watcher(vm, updateComponent, true)\r\n  // 2.根据虚拟DOM产生真实DOM\r\n\r\n  // 3.插入到el元素中\r\n}\r\n\r\n/*\r\n  vue核心流程 \r\n    1. 创造了响应式数据\r\n    2. 模板转换成ast语法树\r\n    3. 将ast语法树转换了render函数\r\n    4. 后续每次数据更新可以只执行render函数(无需再次执行ast转换的过程)\r\n        render函数会去产生虚拟节点(使用响应式数据)\r\n        根据生成的虚拟节点创造真实的DOM\r\n*/","import initState from \"./state\"\r\nimport {complieToFunction}  from \"./compiler/index\"\r\nimport { mountComponent } from \"./lifecycle\"\r\n\r\nexport function initMixin(Vue){ // 就是给Vue增加init方法的\r\n  Vue.prototype.__init = function(options){ // 用于初始化操作\r\n    // vue vm.$options 就是获取用户的配置\r\n    // 我们使用的vue的时候 $nextTick $data $attr ...\r\n    const vm = this\r\n    vm.$options = options // 将用户的选项挂载到实例上\r\n    // 初始化状态\r\n    initState(vm)\r\n\r\n    // 模板解析\r\n    if(options.el){\r\n      vm.$mount(options.el) // 实现数据的挂载\r\n    }\r\n\r\n  }\r\n  Vue.prototype.$mount = function(el){\r\n    const vm = this\r\n    el = document.querySelector(el)\r\n    let ops = vm.$options\r\n    if(!ops.render){ // 先进行查找有没有render函数\r\n      let template // 没有render看一下是否写了template 没写template采用外部的template\r\n      if (!ops.template && el) { // 没有写模板 但是写了el\r\n        template = el.outerHTML\r\n      }else{\r\n        // 如果有templates属性则使用template属性 \r\n        if(el){\r\n          template = ops.template // 如果有el则采用模板的内容\r\n        }\r\n      }\r\n      // 写了template就用写了的tempalte\r\n      if(template && el){\r\n        // 这里需要对模板进行编译\r\n        const render = complieToFunction(template)\r\n        ops.render = render // jsx 最终会被编译成功h('xxx')\r\n      }\r\n    }\r\n\r\n    mountComponent(vm, el) // 组件的挂载\r\n    \r\n  }\r\n}\r\n","import { initMixin } from \"./init\"\r\nimport { initLiftCycle } from \"./lifecycle\"\r\n\r\n// 将所有的方法都耦合在一起\r\nfunction Vue(options){ // options就是用户的选项\r\n\r\n  this.__init(options)\r\n}\r\n\r\n// 扩展了init方法\r\ninitMixin(Vue)\r\ninitLiftCycle(Vue)\r\n\r\nexport default Vue"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","args","result","call","inserted","ob","__ob__","slice","observeArray","id","Dep","subs","target","addDep","watcher","push","console","log","update","ObServe","data","defineProperty","value","enumerable","isArray","__proto__","walk","keys","key","defineReactive","item","observe","dep","get","depend","set","nv","notify","initState","vm","opts","$options","initData","proxy","_data","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","textEnd","indexOf","startTagMatch","endTagMatch","defaultTagRE","gen","codegen","test","JSON","stringify","tokens","lastIndex","exec","index","trim","join","genProps","str","i","obj","split","genChildren","map","child","ast","tagChildren","code","complieToFunction","render","Function","createElementVNode","vnode","createTextVNode","undefined","Watcher","fn","options","renderWatcher","getter","deps","depsId","Set","has","add","addSub","patchProps","el","props","styleName","style","setAttribute","createElm","document","createElement","appendChild","createTextNode","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","initLiftCycle","Vue","_update","$el","_c","arguments","_v","_s","_render","mountComponent","updateComponent","initMixin","__init","$mount","querySelector","ops","template","outerHTML"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;EACA,IAAIA,aAAa,GAAGC,KAAK,CAACC,SAAS,CAAC;EACpC;EACA,IAAIC,aAAa,GAAGC,MAAM,CAACC,MAAM,CAACL,aAAa,CAAC,CAAC;;EAEjD,IAAIM,OAAO,GAAG;EAAE;EACd,MAAM,EACN,KAAK,EACL,OAAO,EACP,SAAS,EACT,SAAS,EACT,MAAM,EACN,QAAQ,CACT,CAAC;;EAEFA,OAAO,CAACC,OAAO,CAAC,UAAAC,MAAM,EAAI;EACxB;EACAL,EAAAA,aAAa,CAACK,MAAM,CAAC,GAAG,YAAmB;EAAA,IAAA,IAAA,qBAAA,CAAA;EAAA,IAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAANC,IAAI,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;QAAJA,IAAI,CAAA,IAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA,CAAA;EAAA,KAAA;EAEvC,IAAA,IAAMC,MAAM,GAAG,CAAAV,qBAAAA,GAAAA,aAAa,CAACQ,MAAM,CAAC,EAACG,IAAI,CAAC,KAAA,CAAA,qBAAA,EAAA,CAAA,IAAI,CAAKF,CAAAA,MAAAA,CAAAA,IAAI,EAAC,CAAC;EACzD,IAAA,IAAIG,QAAQ,CAAA;EACZ,IAAA,IAAIC,EAAE,GAAG,IAAI,CAACC,MAAM,CAAA;EACpB,IAAA,QAAON,MAAM;EACX,MAAA,KAAK,MAAM,CAAA;EACX,MAAA,KAAK,SAAS;EACZI,QAAAA,QAAQ,GAAGH,IAAI,CAAA;EACf,QAAA,MAAA;EACF,MAAA,KAAK,QAAQ;EACXG,QAAAA,QAAQ,GAAGH,IAAI,CAACM,KAAK,CAAC,CAAC,CAAC,CAAC;EACzB,QAAA,MAAA;EAEK,KAAA;EAGT,IAAA,IAAGH,QAAQ,EAAC;EACV;EACAC,MAAAA,EAAE,CAACG,YAAY,CAACJ,QAAQ,CAAC,CAAA;EAC3B,KAAA;EAEA,IAAA,OAAOF,MAAM,CAAA;KACd,CAAA;EACH,CAAC,CAAC;;ECzCF,IAAIO,IAAE,GAAG,CAAC,CAAA;EAAA,IACJC,GAAG,gBAAA,YAAA;IACP,SAAa,GAAA,GAAA;EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,GAAA,CAAA,CAAA;EACX,IAAA,IAAI,CAACD,EAAE,GAAGA,IAAE,EAAE,CAAC;EACf,IAAA,IAAI,CAACE,IAAI,GAAG,EAAE,CAAC;EACjB,GAAA;EAAC,EAAA,YAAA,CAAA,GAAA,EAAA,CAAA;EAAA,IAAA,GAAA,EAAA,QAAA;EAAA,IAAA,KAAA,EACD,SAAQ,MAAA,GAAA;EACN;EACA;EACA;;EAEAD,MAAAA,GAAG,CAACE,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC,CAAC;;EAExB;EACA;EACF,KAAA;EAAC,GAAA,EAAA;EAAA,IAAA,GAAA,EAAA,QAAA;MAAA,KACD,EAAA,SAAA,MAAA,CAAOC,OAAO,EAAC;EACb,MAAA,IAAI,CAACH,IAAI,CAACI,IAAI,CAACD,OAAO,CAAC,CAAA;EACzB,KAAA;EAAC,GAAA,EAAA;EAAA,IAAA,GAAA,EAAA,QAAA;EAAA,IAAA,KAAA,EACD,SAAQ,MAAA,GAAA;EACNE,MAAAA,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,IAAI,CAAC,CAAA;EACtB,MAAA,IAAI,CAACA,IAAI,CAACZ,OAAO,CAAC,UAAAe,OAAO,EAAA;UAAA,OAAIA,OAAO,CAACI,MAAM,EAAE,CAAA;EAAA,OAAA,CAAC,CAAC;EACjD,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAA,GAAA,CAAA;EAAA,CAAA,EAAA,CAAA;EAGHR,GAAG,CAACE,MAAM,GAAG,IAAI;;ECxBM,IAEjBO,OAAO,gBAAA,YAAA;EACX,EAAA,SAAA,OAAA,CAAYC,IAAI,EAAC;EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,CAAA,CAAA;EACf;EACAxB,IAAAA,MAAM,CAACyB,cAAc,CAACD,IAAI,EAAC,QAAQ,EAAC;EAClCE,MAAAA,KAAK,EAAE,IAAI;QACXC,UAAU,EAAE,KAAK;EACnB,KAAC,CAAC,CAAA;;EACF,IAAA,IAAG9B,KAAK,CAAC+B,OAAO,CAACJ,IAAI,CAAC,EAAC;EACrB;EACAA,MAAAA,IAAI,CAACK,SAAS,GAAG9B,aAAa,CAAC;EAC/B,MAAA,IAAI,CAACa,YAAY,CAACY,IAAI,CAAC,CAAC;EAC1B,KAAC,MAAI;EACH,MAAA,IAAI,CAACM,IAAI,CAACN,IAAI,CAAC,CAAA;EACjB,KAAA;EAEF,GAAA;EAAC,EAAA,YAAA,CAAA,OAAA,EAAA,CAAA;EAAA,IAAA,GAAA,EAAA,MAAA;MAAA,KACD,EAAA,SAAA,IAAA,CAAKA,IAAI,EAAC;EAAE;EACV;QACAxB,MAAM,CAAC+B,IAAI,CAACP,IAAI,CAAC,CAACrB,OAAO,CAAC,UAAA6B,GAAG,EAAA;UAAA,OAAIC,cAAc,CAACT,IAAI,EAAEQ,GAAG,EAAER,IAAI,CAACQ,GAAG,CAAC,CAAC,CAAA;SAAC,CAAA,CAAA;EACxE,KAAA;EAAC,GAAA,EAAA;EAAA,IAAA,GAAA,EAAA,cAAA;MAAA,KACD,EAAA,SAAA,YAAA,CAAaR,IAAI,EAAC;EAAE;EAClBA,MAAAA,IAAI,CAACrB,OAAO,CAAC,UAAA+B,IAAI,EAAA;UAAA,OAAIC,OAAO,CAACD,IAAI,CAAC,CAAA;SAAC,CAAA,CAAA;EACrC,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAA,OAAA,CAAA;EAAA,CAAA,EAAA,CAAA;EAGI,SAASD,cAAc,CAACjB,MAAM,EAAEgB,GAAG,EAAGN,KAAK,EAAC;EAAE;EACnD;IACAS,OAAO,CAACT,KAAK,CAAC,CAAA;EACd,EAAA,IAAIU,GAAG,GAAG,IAAItB,GAAG,EAAE,CAAC;EACpBd,EAAAA,MAAM,CAACyB,cAAc,CAACT,MAAM,EAAEgB,GAAG,EAAE;EACjCK,IAAAA,GAAG,EAAE,SAAA,GAAA,GAAA;EAAE;EACLjB,MAAAA,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC,CAAA;QACnB,IAAGP,GAAG,CAACE,MAAM,EAAC;UACZoB,GAAG,CAACE,MAAM,EAAE,CAAC;EACf,OAAA;;EACA,MAAA,OAAOZ,KAAK,CAAA;OACb;MACDa,GAAG,EAAA,SAAA,GAAA,CAACC,EAAE,EAAC;EAAE;QACP,IAAGA,EAAE,KAAKd,KAAK,EAAE,OAAA;QACjBS,OAAO,CAACK,EAAE,CAAC,CAAA;EACXd,MAAAA,KAAK,GAAGc,EAAE,CAAA;EACVpB,MAAAA,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC,CAAA;QACnBe,GAAG,CAACK,MAAM,EAAE,CAAC;EACf,KAAA;EACF,GAAC,CAAC,CAAA;EACJ,CAAA;;EAEO,SAASN,OAAO,CAACX,IAAI,EAAC;EAC3B;IACA,IAAG,OAAA,CAAOA,IAAI,CAAK,KAAA,QAAQ,IAAIA,IAAI,IAAI,IAAI,EAAE,OAAA;;EAE7C;EACA,EAAA,OAAO,IAAID,OAAO,CAACC,IAAI,CAAC,CAAA;EAE1B;;ECrDA,SAASkB,SAAS,CAACC,EAAE,EAAE;EACrB,EAAA,IAAMC,IAAI,GAAGD,EAAE,CAACE,QAAQ,CAAA;IACxB,IAAID,IAAI,CAACpB,IAAI,EAAE;MACbsB,QAAQ,CAACH,EAAE,CAAC,CAAA;EACd,GAAA;EACF,CAAA;EAEA,SAASI,KAAK,CAACJ,EAAE,EAAE3B,MAAM,EAAEgB,GAAG,EAAC;EAC7BhC,EAAAA,MAAM,CAACyB,cAAc,CAACkB,EAAE,EAAEX,GAAG,EAAE;EAC7BK,IAAAA,GAAG,EAAE,SAAA,GAAA,GAAA;EACH,MAAA,OAAOM,EAAE,CAAC3B,MAAM,CAAC,CAACgB,GAAG,CAAC,CAAA;OACvB;MACDO,GAAG,EAAA,SAAA,GAAA,CAACC,EAAE,EAAC;EACLG,MAAAA,EAAE,CAAC3B,MAAM,CAAC,CAACgB,GAAG,CAAC,GAAGQ,EAAE,CAAA;EACtB,KAAA;EACF,GAAC,CAAC,CAAA;EACJ,CAAA;EAEA,SAASM,QAAQ,CAACH,EAAE,EAAE;EACpB,EAAA,IAAInB,IAAI,GAAGmB,EAAE,CAACE,QAAQ,CAACrB,IAAI,CAAC;EAC5BA,EAAAA,IAAI,GAAG,OAAOA,IAAI,KAAK,UAAU,GAAGA,IAAI,CAACjB,IAAI,CAACoC,EAAE,CAAC,GAAGnB,IAAI,CAAC;;EAEzDmB,EAAAA,EAAE,CAACK,KAAK,GAAGxB,IAAI,CAAC;EAChB;IACAW,OAAO,CAACX,IAAI,CAAC,CAAA;;EAEb;EACA,EAAA,KAAI,IAAIQ,GAAG,IAAIR,IAAI,EAAC;EAClBuB,IAAAA,KAAK,CAACJ,EAAE,EAAE,OAAO,EAAEX,GAAG,CAAC,CAAA;EACzB,GAAA;EAEF;;EClCA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;EACA;EACA;;EAEA,IAAMiB,MAAM,GAAiC,8BAAA,CAAA;EAC7C,IAAMC,YAAY,GAAA,MAAA,CAAA,MAAA,CAAUD,MAAM,EAAA,OAAA,CAAA,CAAA,MAAA,CAAQA,MAAM,EAAG,GAAA,CAAA,CAAA;EACnD,IAAME,YAAY,GAAG,IAAIC,MAAM,aAAMF,YAAY,CAAA,CAAG,CAAC;EACrD,IAAMG,MAAM,GAAG,IAAID,MAAM,gBAASF,YAAY,EAAA,QAAA,CAAA,CAAS,CAAC;EACxD,IAAMI,SAAS,GAAG,2EAA2E,CAAC;EAC9F;EACA,IAAMC,aAAa,GAAG,YAAY,CAAC;;EAEnC;;EAEA;EACO,SAASC,SAAS,CAACC,IAAI,EAAC;EAAE;;IAE/B,IAAMC,YAAY,GAAG,CAAC,CAAA;IACtB,IAAMC,SAAS,GAAG,CAAC,CAAA;IACnB,IAAMC,KAAK,GAAG,EAAE,CAAC;EACjB,EAAA,IAAIC,aAAa,CAAC;EAClB,EAAA,IAAIC,IAAI,CAAA;;EAER;EACA,EAAA,SAASC,gBAAgB,CAACC,GAAG,EAAEC,KAAK,EAAC;MACnC,OAAO;EACLD,MAAAA,GAAG,EAAHA,GAAG;EACHC,MAAAA,KAAK,EAALA,KAAK;EACLC,MAAAA,IAAI,EAAER,YAAY;EAClBS,MAAAA,QAAQ,EAAE,EAAE;EAAE;EACdC,MAAAA,MAAM,EAAE,IAAA;OACT,CAAA;EACH,GAAA;;EAEA;EACA,EAAA,SAASC,KAAK,CAACL,GAAG,EAAEC,KAAK,EAAC;MACxB,IAAIK,IAAI,GAAGP,gBAAgB,CAACC,GAAG,EAAEC,KAAK,CAAC,CAAC;MACxC,IAAG,CAACH,IAAI,EAAC;EAAE;EACTA,MAAAA,IAAI,GAAGQ,IAAI,CAAA;EACb,KAAA;EACA,IAAA,IAAGT,aAAa,EAAC;EAAE;EACjB;QACAS,IAAI,CAACF,MAAM,GAAGP,aAAa,CAAA;EAC3B;EACAA,MAAAA,aAAa,CAACM,QAAQ,CAAChD,IAAI,CAACmD,IAAI,CAAC,CAAA;EAEnC,KAAA;EACA;EACAV,IAAAA,KAAK,CAACzC,IAAI,CAACmD,IAAI,CAAC,CAAA;EAChB;EACAT,IAAAA,aAAa,GAAGS,IAAI,CAAA;EACtB,GAAA;;EAEA;IACA,SAASC,KAAK,CAACC,IAAI,EAAC;MAClBA,IAAI,GAAGA,IAAI,CAACC,OAAO,CAAC,MAAM,EAAC,EAAE,CAAC,CAAC;EAC/B;EACAD,IAAAA,IAAI,IAAIX,aAAa,CAACM,QAAQ,CAAChD,IAAI,CAAC;EAClCqD,MAAAA,IAAI,EAAJA,IAAI;EACJN,MAAAA,IAAI,EAAEP,SAAS;QACfS,MAAM,EAAEP,aAAa;EACvB,KAAC,CAAC,CAAA;EACJ,GAAA;;EAEA;IACA,SAASa,GAAG,CAACV,GAAG,EAAC;EACf;EACA,IAAWJ,KAAK,CAACe,GAAG,GAAG;EACvB;MACAd,aAAa,GAAGD,KAAK,CAACA,KAAK,CAACgB,MAAM,GAAE,CAAC,CAAC,CAAA;EACxC,GAAA;;EAEA;IACA,SAASC,OAAO,CAACC,CAAC,EAAC;EACjBrB,IAAAA,IAAI,GAAGA,IAAI,CAACsB,SAAS,CAACD,CAAC,CAAC,CAAA;EAC1B,GAAA;;EAEA;EACA,EAAA,SAASE,aAAa,GAAE;MACtB,IAAMX,KAAK,GAAGZ,IAAI,CAACwB,KAAK,CAAC9B,YAAY,CAAC,CAAC;EACvC,IAAA,IAAGkB,KAAK,EAAC;EACP,MAAA,IAAMY,KAAK,GAAG;EACZC,QAAAA,OAAO,EAAEb,KAAK,CAAC,CAAC,CAAC;EAAE;EACnBJ,QAAAA,KAAK,EAAE,EAAA;SACR,CAAA;QACDY,OAAO,CAACR,KAAK,CAAC,CAAC,CAAC,CAACO,MAAM,CAAC,CAAC;EACzB;QACA,IAAIO,IAAI,EAAET,IAAG,CAAC;EACd;QACA,OAAM,EAAEA,IAAG,GAAGjB,IAAI,CAACwB,KAAK,CAAC1B,aAAa,CAAC,CAAC,KAAK4B,IAAI,GAAG1B,IAAI,CAACwB,KAAK,CAAC3B,SAAS,CAAC,CAAC,EAAC;EACzEuB,QAAAA,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC,CAACP,MAAM,CAAC,CAAA;EACvBK,QAAAA,KAAK,CAAChB,KAAK,CAAC9C,IAAI,CAAC;EACfiE,UAAAA,IAAI,EAAED,IAAI,CAAC,CAAC,CAAC;EACbzD,UAAAA,KAAK,EAAEyD,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAI,IAAA;EAC1C,SAAC,CAAC,CAAA;EACJ,OAAA;EACA;EACA,MAAA,IAAGT,IAAG,EAAC;EACL;EACAG,QAAAA,OAAO,CAACH,IAAG,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAA;EACxB,OAAA;;EAEA;EACA,MAAA,OAAOK,KAAK,CAAA;EACd,KAAA;;EAEA;EACA,IAAA,OAAO,KAAK,CAAA;EACd,GAAA;;EAEA;EACA,EAAA,OAAOxB,IAAI,EAAE;EACX;EACA;MACA,IAAI4B,OAAO,GAAG5B,IAAI,CAAC6B,OAAO,CAAC,GAAG,CAAC,CAAC;MAChC,IAAGD,OAAO,IAAI,CAAC,EAAC;EAEd,MAAA,IAAME,aAAa,GAAGP,aAAa,EAAE,CAAC;EACtC,MAAA,IAAGO,aAAa,EAAC;EAAE;UACjBlB,KAAK,CAACkB,aAAa,CAACL,OAAO,EAAEK,aAAa,CAACtB,KAAK,CAAC,CAAA;EACjD,QAAA,SAAA;EACF,OAAA;QAEA,IAAIuB,WAAW,GAAG/B,IAAI,CAACwB,KAAK,CAAC5B,MAAM,CAAC,CAAC;EACrC,MAAA,IAAGmC,WAAW,EAAC;EACbX,QAAAA,OAAO,CAACW,WAAW,CAAC,CAAC,CAAC,CAACZ,MAAM,CAAC,CAAA;EAC9BF,QAAAA,GAAG,CAACc,WAAW,CAAC,CAAC,CAAC,CAAC,CAAA;EACnB,QAAA,SAAA;EACF,OAAA;EAEF,KAAA;EACA;MACA,IAAGH,OAAO,GAAG,CAAC,EAAC;QACb,IAAIb,IAAI,GAAGf,IAAI,CAACsB,SAAS,CAAC,CAAC,EAAEM,OAAO,CAAC,CAAC;EACtC,MAAA,IAAGb,IAAI,EAAC;EAAE;UACRD,KAAK,CAACC,IAAI,CAAC,CAAA;EACXK,QAAAA,OAAO,CAACL,IAAI,CAACI,MAAM,CAAC,CAAC;EACvB,OAAA;EACF,KAAA;EACF,GAAA;;EAEA,EAAA,OAAOd,IAAI,CAAA;EAEb;;EC7JA;EACA;EACA;EACA;EACA;;EAEA,IAAM2B,YAAY,GAAG,0BAA0B,CAAC;EAChD,SAASC,GAAG,CAACpB,IAAI,EAAE;EACjB,EAAA,IAAIA,IAAI,CAACJ,IAAI,KAAK,CAAC,EAAE;EACnB;MACA,OAAOyB,OAAO,CAACrB,IAAI,CAAC,CAAA;EACtB,GAAC,MAAM;EACL;EACA,IAAA,IAAIE,IAAI,GAAGF,IAAI,CAACE,IAAI,CAAA;EACpB,IAAA,IAAI,CAACiB,YAAY,CAACG,IAAI,CAACpB,IAAI,CAAC,EAAE;EAAE;EAC9B,MAAA,OAAA,KAAA,CAAA,MAAA,CAAaqB,IAAI,CAACC,SAAS,CAACtB,IAAI,CAAC,EAAA,GAAA,CAAA,CAAA;EACnC,KAAC,MAAM;EACL;QACA,IAAIuB,MAAM,GAAG,EAAE,CAAA;EACf,MAAA,IAAId,KAAK,CAAA;QACT,IAAIe,SAAS,GAAG,CAAC,CAAA;EACjBP,MAAAA,YAAY,CAACO,SAAS,GAAG,CAAC,CAAC;QAC3B,OAAOf,KAAK,GAAGQ,YAAY,CAACQ,IAAI,CAACzB,IAAI,CAAC,EAAE;EAAE;EACxC,QAAA,IAAI0B,KAAK,GAAGjB,KAAK,CAACiB,KAAK,CAAC;UACxB,IAAIA,KAAK,GAAGF,SAAS,EAAE;EAAE;EACvB;EACAD,UAAAA,MAAM,CAAC5E,IAAI,CAAC0E,IAAI,CAACC,SAAS,CAACtB,IAAI,CAAC7D,KAAK,CAACqF,SAAS,EAAEE,KAAK,CAAC,CAAC,CAAC,CAAA;EAC3D,SAAA;EACA;UACAH,MAAM,CAAC5E,IAAI,CAAA,KAAA,CAAA,MAAA,CAAO8D,KAAK,CAAC,CAAC,CAAC,CAACkB,IAAI,EAAE,EAAI,GAAA,CAAA,CAAA,CAAA;UACrCH,SAAS,GAAGE,KAAK,GAAGjB,KAAK,CAAC,CAAC,CAAC,CAACL,MAAM,CAAC;EACtC,OAAA;EACA;EACA,MAAA,IAAIoB,SAAS,GAAGxB,IAAI,CAACI,MAAM,EAAE;EAC3BmB,QAAAA,MAAM,CAAC5E,IAAI,CAAC0E,IAAI,CAACC,SAAS,CAACtB,IAAI,CAAC7D,KAAK,CAACqF,SAAS,CAAC,CAAC,CAAC,CAAA;EACpD,OAAA;EAEA,MAAA,OAAA,KAAA,CAAA,MAAA,CAAaD,MAAM,CAACK,IAAI,CAAC,GAAG,CAAC,OAAG;EAClC,KAAA;EACF,GAAA;EACF,CAAA;;EAEA,SAASC,QAAQ,CAACpC,KAAK,EAAE;EAEvB;EACF;EACA;EACA;;IAEE,IAAIqC,GAAG,GAAG,EAAE,CAAC;IAAA,IAC0B,KAAA,GAAA,SAAA,KAAA,GAAA;EACrC,IAAA,IAAInB,IAAI,GAAGlB,KAAK,CAACsC,CAAC,CAAC,CAAA;EACnB;EACA,IAAA,IAAIpB,IAAI,CAACC,IAAI,KAAK,OAAO,EAAE;EACzB;QACA,IAAIoB,GAAG,GAAG,EAAE,CAAA;EACZrB,MAAAA,IAAI,CAACzD,KAAK,CAAC+E,KAAK,CAAC,GAAG,CAAC,CAACtG,OAAO,CAAC,UAAA+B,IAAI,EAAI;EACpC,QAAA,IAAA,WAAA,GAAmBA,IAAI,CAACuE,KAAK,CAAC,GAAG,CAAC;EAAA,UAAA,YAAA,GAAA,cAAA,CAAA,WAAA,EAAA,CAAA,CAAA;YAA7BzE,GAAG,GAAA,YAAA,CAAA,CAAA,CAAA;YAAEN,KAAK,GAAA,YAAA,CAAA,CAAA,CAAA,CAAA;UACfA,KAAK,KAAK8E,GAAG,CAACxE,GAAG,CAAC,GAAGN,KAAK,CAACyE,IAAI,EAAE,CAAC,CAAA;EACpC,OAAC,CAAC,CAAA;QACFhB,IAAI,CAACzD,KAAK,GAAG8E,GAAG,CAAA;EAClB,KAAA;EACAF,IAAAA,GAAG,IAAOnB,EAAAA,CAAAA,MAAAA,CAAAA,IAAI,CAACC,IAAI,EAAIS,GAAAA,CAAAA,CAAAA,MAAAA,CAAAA,IAAI,CAACC,SAAS,CAACX,IAAI,CAACzD,KAAK,CAAC,EAAG,GAAA,CAAA,CAAA;KACrD,CAAA;EAbD,EAAA,KAAK,IAAI6E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGtC,KAAK,CAACW,MAAM,EAAE2B,CAAC,EAAE,EAAA;EAAA,IAAA,KAAA,EAAA,CAAA;EAAA,GAAA;IAcrC,OAAWD,GAAAA,CAAAA,MAAAA,CAAAA,GAAG,CAAC3F,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAA,GAAA,CAAA,CAAG;EAC/B,CAAA;;EAEA,SAAS+F,WAAW,CAACvC,QAAQ,EAAE;EAC7B,EAAA,OAAOA,QAAQ,CAACwC,GAAG,CAAC,UAAAC,KAAK,EAAA;MAAA,OAAIlB,GAAG,CAACkB,KAAK,CAAC,CAAA;EAAA,GAAA,CAAC,CAACR,IAAI,CAAC,GAAG,CAAC,CAAA;EACpD,CAAA;EAEA,SAAST,OAAO,CAACkB,GAAG,EAAE;EACpB,EAAA,IAAI1C,QAAQ,GAAGuC,WAAW,CAACG,GAAG,CAAC1C,QAAQ,CAAC,CAAA;EACxC,EAAA,IAAIH,GAAG,GAAG6C,GAAG,CAAC7C,GAAG,CAAA;EACjB,EAAA,IAAIC,KAAK,GAAG4C,GAAG,CAAC5C,KAAK,CAACW,MAAM,GAAGyB,QAAQ,CAACQ,GAAG,CAAC5C,KAAK,CAAC,GAAG,MAAM,CAAA;IAC3D,IAAI6C,WAAW,GAAGD,GAAG,CAAC1C,QAAQ,CAACS,MAAM,GAAA,GAAA,CAAA,MAAA,CAAOT,QAAQ,CAAA,GAAK,EAAE,CAAA;EAC3D,EAAA,IAAI4C,IAAI,GACC/C,MAAAA,CAAAA,MAAAA,CAAAA,GAAG,sBACRC,KAAK,EAAA,QAAA,CAAA,CAAA,MAAA,CACL6C,WAAW,EAEd,SAAA,CAAA,CAAA;EACD,EAAA,OAAOC,IAAI,CAAA;EACb,CAAA;EAEO,SAASC,iBAAiB,CAACvD,IAAI,EAAE;EAEtC;EACA,EAAA,IAAIoD,GAAG,GAAGrD,SAAS,CAACC,IAAI,CAAC,CAAA;EACzBrC,EAAAA,OAAO,CAACC,GAAG,CAACwF,GAAG,CAAC,CAAA;;EAEhB;EACA;EACA,EAAA,IAAIE,IAAI,GAAGpB,OAAO,CAACkB,GAAG,CAAC,CAAA;IACvBE,IAAI,GAAA,oBAAA,CAAA,MAAA,CAAwBA,IAAI,EAAA,GAAA,CAAG,CAAC;EACpC,EAAA,IAAIE,MAAM,GAAG,IAAIC,QAAQ,CAACH,IAAI,CAAC,CAAC;;EAEhC;EACA3F,EAAAA,OAAO,CAACC,GAAG,CAAC4F,MAAM,CAAC,CAAA;EACnB,EAAA,OAAOA,MAAM,CAAA;EAEf;;ECzGO,SAASE,kBAAkB,CAACxE,EAAE,EAAEqB,GAAG,EAAExC,IAAI,EAAc;EAC5D,EAAA,IAAGA,IAAI,IAAI,IAAI,EAAEA,IAAI,GAAG,EAAE,CAAA;EAC1B,EAAA,IAAIQ,GAAG,GAAGR,IAAI,CAACQ,GAAG,CAAA;EAClB,EAAA,IAAGA,GAAG,EAAC;MACL,OAAOR,IAAI,CAACQ,GAAG,CAAA;EACjB,GAAA;EAAC,EAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EALkDmC,QAAQ,GAAA,IAAA,KAAA,CAAA,IAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;MAARA,QAAQ,CAAA,IAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA,CAAA;EAAA,GAAA;IAM3D,OAAOiD,KAAK,CAACzE,EAAE,EAAEqB,GAAG,EAAEhC,GAAG,EAAER,IAAI,EAAE2C,QAAQ,CAAC,CAAA;EAC5C,CAAA;EAEO,SAASkD,eAAe,CAAC1E,EAAE,EAAE6B,IAAI,EAAC;EACvC,EAAA,OAAO4C,KAAK,CAACzE,EAAE,EAAE2E,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAE9C,IAAI,CAAC,CAAA;EACpE,CAAA;EAEA,SAAS4C,KAAK,CAACzE,EAAE,EAAEqB,GAAG,EAAEhC,GAAG,EAAER,IAAI,EAAE2C,QAAQ,EAAEK,IAAI,EAAC;IAChD,OAAO;EACL7B,IAAAA,EAAE,EAAFA,EAAE;EAAEqB,IAAAA,GAAG,EAAHA,GAAG;EAAEhC,IAAAA,GAAG,EAAHA,GAAG;EAAER,IAAAA,IAAI,EAAJA,IAAI;EAAE2C,IAAAA,QAAQ,EAARA,QAAQ;EAAEK,IAAAA,IAAI,EAAJA,IAAAA;KAC/B,CAAA;EACH;;ECfA,IAAI3D,EAAE,GAAG,CAAC,CAAA;;EAEV;EACA;EACA;EAAA,IACM0G,OAAO,gBAAA,YAAA;EACX,EAAA,SAAA,OAAA,CAAY5E,EAAE,EAAE6E,EAAE,EAAEC,OAAO,EAAC;EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,CAAA,CAAA;EAC1B,IAAA,IAAI,CAAC5G,EAAE,GAAGA,EAAE,EAAE,CAAA;EACd,IAAA,IAAI,CAAC6G,aAAa,GAAGD,OAAO,CAAC;EAC7B,IAAA,IAAI,CAACE,MAAM,GAAGH,EAAE,CAAC;EACjB,IAAA,IAAI,CAACI,IAAI,GAAG,EAAE,CAAC;EACf,IAAA,IAAI,CAACC,MAAM,GAAG,IAAIC,GAAG,EAAE,CAAA;MACvB,IAAI,CAACzF,GAAG,EAAE,CAAA;EACZ,GAAA;EAAC,EAAA,YAAA,CAAA,OAAA,EAAA,CAAA;EAAA,IAAA,GAAA,EAAA,QAAA;MAAA,KACD,EAAA,SAAA,MAAA,CAAOD,GAAG,EAAC;EAAE;EACX,MAAA,IAAIvB,EAAE,GAAGuB,GAAG,CAACvB,EAAE,CAAA;QACf,IAAG,CAAC,IAAI,CAACgH,MAAM,CAACE,GAAG,CAAClH,EAAE,CAAC,EAAC;EACtB,QAAA,IAAI,CAAC+G,IAAI,CAACzG,IAAI,CAACiB,GAAG,CAAC,CAAA;EACnB,QAAA,IAAI,CAACyF,MAAM,CAACG,GAAG,CAACnH,EAAE,CAAC,CAAA;EACnBuB,QAAAA,GAAG,CAAC6F,MAAM,CAAC,IAAI,CAAC,CAAC;EACnB,OAAA;EACF,KAAA;EAAC,GAAA,EAAA;EAAA,IAAA,GAAA,EAAA,KAAA;EAAA,IAAA,KAAA,EACD,SAAK,GAAA,GAAA;EACHnH,MAAAA,GAAG,CAACE,MAAM,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC2G,MAAM,EAAE,CAAC;EACd7G,MAAAA,GAAG,CAACE,MAAM,GAAG,IAAI,CAAC;EACpB,KAAA;EAAC,GAAA,EAAA;EAAA,IAAA,GAAA,EAAA,QAAA;EAAA,IAAA,KAAA,EACD,SAAQ,MAAA,GAAA;EACNI,MAAAA,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC,CAAA;QACnB,IAAI,CAACgB,GAAG,EAAE,CAAA;EACZ,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAA,OAAA,CAAA;EAAA,CAAA,EAAA;;EC7BH;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,SAAS6F,UAAU,CAACC,EAAE,EAAEC,KAAK,EAAC;EAAE;;EAE9B,EAAA,KAAK,IAAIpG,GAAG,IAAIoG,KAAK,EAAE;MACrB,IAAGpG,GAAG,KAAK,OAAO,EAAC;EACjB,MAAA,KAAI,IAAIqG,SAAS,IAAID,KAAK,CAACE,KAAK,EAAC;UAC/BH,EAAE,CAACG,KAAK,CAACD,SAAS,CAAC,GAAGD,KAAK,CAACE,KAAK,CAACD,SAAS,CAAC,CAAA;EAC9C,OAAA;EACF,KAAC,MAAI;QACHF,EAAE,CAACI,YAAY,CAACvG,GAAG,EAAEoG,KAAK,CAACpG,GAAG,CAAC,CAAC,CAAA;EAClC,KAAA;EACF,GAAA;EAEF,CAAA;EAEA,SAASwG,SAAS,CAACpB,KAAK,EAAE;EACxB,EAAA,IAAMpD,GAAG,GAA2BoD,KAAK,CAAnCpD,GAAG;MAAExC,IAAI,GAAqB4F,KAAK,CAA9B5F,IAAI;MAAE2C,QAAQ,GAAWiD,KAAK,CAAxBjD,QAAQ;MAAEK,IAAI,GAAK4C,KAAK,CAAd5C,IAAI,CAAA;EAC/B,EAAA,IAAG,OAAOR,GAAG,KAAK,QAAQ,EAAC;MACzBoD,KAAK,CAACe,EAAE,GAAGM,QAAQ,CAACC,aAAa,CAAC1E,GAAG,CAAC,CAAC;EACvCkE,IAAAA,UAAU,CAACd,KAAK,CAACe,EAAE,EAAE3G,IAAI,CAAC,CAAC;EAC3B2C,IAAAA,QAAQ,CAAChE,OAAO,CAAC,UAAAyG,KAAK,EAAI;QACxBQ,KAAK,CAACe,EAAE,CAACQ,WAAW,CAACH,SAAS,CAAC5B,KAAK,CAAC,CAAC,CAAC;EACzC,KAAC,CAAC,CAAA;EACJ,GAAC,MAAI;EACH;MACAQ,KAAK,CAACe,EAAE,GAAGM,QAAQ,CAACG,cAAc,CAACpE,IAAI,CAAC,CAAA;EAC1C,GAAA;IAEA,OAAO4C,KAAK,CAACe,EAAE,CAAA;EACjB,CAAA;;EAEA;EACA,SAASU,KAAK,CAACC,QAAQ,EAAE1B,KAAK,EAAC;EAC7B;EACAhG,EAAAA,OAAO,CAACC,GAAG,CAACyH,QAAQ,EAAC1B,KAAK,CAAC,CAAA;EAE3B,EAAA,IAAM2B,aAAa,GAAGD,QAAQ,CAACE,QAAQ,CAAC;EACxC,EAAA,IAAGD,aAAa,EAAC;EAAE;MACjB,IAAME,GAAG,GAAGH,QAAQ,CAAC;EACrB,IAAA,IAAMI,SAAS,GAAGD,GAAG,CAACE,UAAU,CAAC;EACjC,IAAA,IAAIC,MAAM,GAAGZ,SAAS,CAACpB,KAAK,CAAC,CAAC;EAC9B;EACA;MACA8B,SAAS,CAACG,YAAY,CAACD,MAAM,EAAEH,GAAG,CAACK,WAAW,CAAC,CAAC;EAChDJ,IAAAA,SAAS,CAACK,WAAW,CAACN,GAAG,CAAC,CAAC;;EAE3B,IAAA,OAAOG,MAAM,CAAA;EACf,GAEA;EACF,CAAA;EAEO,SAASI,aAAa,CAACC,GAAG,EAAC;EAChCA,EAAAA,GAAG,CAAC3J,SAAS,CAAC4J,OAAO,GAAG,UAAStC,KAAK,EAAC;EAAE;MACvC,IAAMzE,EAAE,GAAG,IAAI,CAAA;EACf,IAAA,IAAMwF,EAAE,GAAGxF,EAAE,CAACgH,GAAG,CAAA;;EAEjB;EACAvI,IAAAA,OAAO,CAACC,GAAG,CAAC,UAAU,EAAC+F,KAAK,CAAC,CAAA;MAC7BzE,EAAE,CAACgH,GAAG,GAAGd,KAAK,CAACV,EAAE,EAAEf,KAAK,CAAC,CAAA;KAC1B,CAAA;EACDqC,EAAAA,GAAG,CAAC3J,SAAS,CAAC8J,EAAE,GAAG,YAAU;EAC3B,IAAA,OAAOzC,kBAAkB,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAC,IAAI,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,IAAA,CAAK0C,SAAS,CAAC,CAAA,CAAA,CAAA;KAC9C,CAAA;EACDJ,EAAAA,GAAG,CAAC3J,SAAS,CAACgK,EAAE,GAAG,YAAU;EAC3B,IAAA,OAAOzC,eAAe,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAC,IAAI,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,IAAA,CAAKwC,SAAS,CAAC,CAAA,CAAA,CAAA;KAC3C,CAAA;EACDJ,EAAAA,GAAG,CAAC3J,SAAS,CAACiK,EAAE,GAAG,UAASrI,KAAK,EAAC;EAChC,IAAA,IAAG,QAAOA,KAAK,CAAA,KAAK,QAAQ,EAAE,OAAOA,KAAK,CAAA;EAC1C,IAAA,OAAOmE,IAAI,CAACC,SAAS,CAACpE,KAAK,CAAC,CAAA;KAC7B,CAAA;EACD+H,EAAAA,GAAG,CAAC3J,SAAS,CAACkK,OAAO,GAAG,YAAU;EAChC;MACA,OAAO,IAAI,CAACnH,QAAQ,CAACoE,MAAM,CAAC1G,IAAI,CAAC,IAAI,CAAC,CAAC;KACxC,CAAA;EACH,CAAA;;EAEO,SAAS0J,cAAc,CAACtH,EAAE,EAAEwF,EAAE,EAAC;EAAE;IACtCxF,EAAE,CAACgH,GAAG,GAAGxB,EAAE,CAAA;;EAEX;EACA,EAAA,IAAM+B,eAAe,GAAG,SAAlBA,eAAe,GAAS;MAC5BvH,EAAE,CAAC+G,OAAO,CAAC/G,EAAE,CAACqH,OAAO,EAAE,CAAC,CAAC;KAC1B,CAAA;;IACe,IAAIzC,OAAO,CAAC5E,EAAE,EAAEuH,eAAe,EAAE,IAAI,EAAC;EACtD;;EAEA;EACF,CAAA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;ECxGO,SAASC,SAAS,CAACV,GAAG,EAAC;EAAE;EAC9BA,EAAAA,GAAG,CAAC3J,SAAS,CAACsK,MAAM,GAAG,UAAS3C,OAAO,EAAC;EAAE;EACxC;EACA;MACA,IAAM9E,EAAE,GAAG,IAAI,CAAA;EACfA,IAAAA,EAAE,CAACE,QAAQ,GAAG4E,OAAO,CAAC;EACtB;MACA/E,SAAS,CAACC,EAAE,CAAC,CAAA;;EAEb;MACA,IAAG8E,OAAO,CAACU,EAAE,EAAC;EACZxF,MAAAA,EAAE,CAAC0H,MAAM,CAAC5C,OAAO,CAACU,EAAE,CAAC,CAAC;EACxB,KAAA;KAED,CAAA;;EACDsB,EAAAA,GAAG,CAAC3J,SAAS,CAACuK,MAAM,GAAG,UAASlC,EAAE,EAAC;MACjC,IAAMxF,EAAE,GAAG,IAAI,CAAA;EACfwF,IAAAA,EAAE,GAAGM,QAAQ,CAAC6B,aAAa,CAACnC,EAAE,CAAC,CAAA;EAC/B,IAAA,IAAIoC,GAAG,GAAG5H,EAAE,CAACE,QAAQ,CAAA;EACrB,IAAA,IAAG,CAAC0H,GAAG,CAACtD,MAAM,EAAC;EAAE;EACf,MAAA,IAAIuD,QAAQ,CAAC;EACb,MAAA,IAAI,CAACD,GAAG,CAACC,QAAQ,IAAIrC,EAAE,EAAE;EAAE;UACzBqC,QAAQ,GAAGrC,EAAE,CAACsC,SAAS,CAAA;EACzB,OAAC,MAAI;EACH;EACA,QAAA,IAAGtC,EAAE,EAAC;EACJqC,UAAAA,QAAQ,GAAGD,GAAG,CAACC,QAAQ,CAAC;EAC1B,SAAA;EACF,OAAA;EACA;QACA,IAAGA,QAAQ,IAAIrC,EAAE,EAAC;EAChB;EACA,QAAA,IAAMlB,MAAM,GAAGD,iBAAiB,CAACwD,QAAQ,CAAC,CAAA;EAC1CD,QAAAA,GAAG,CAACtD,MAAM,GAAGA,MAAM,CAAC;EACtB,OAAA;EACF,KAAA;;EAEAgD,IAAAA,cAAc,CAACtH,EAAE,EAAEwF,EAAE,CAAC,CAAC;KAExB,CAAA;EACH;;ECzCA;EACA,SAASsB,GAAG,CAAChC,OAAO,EAAC;EAAE;;EAErB,EAAA,IAAI,CAAC2C,MAAM,CAAC3C,OAAO,CAAC,CAAA;EACtB,CAAA;;EAEA;EACA0C,SAAS,CAACV,GAAG,CAAC,CAAA;EACdD,aAAa,CAACC,GAAG,CAAC;;;;;;;;"}